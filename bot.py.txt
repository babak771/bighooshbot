import telegram from telegram.ext import Updater, MessageHandler, Filters from datetime import datetime, timedelta import pytz from apscheduler.schedulers.background import BackgroundScheduler import logging # تنظیم توکن ربات TOKEN = "7205371024:AAFCGQRwXyyCZV6ZjWbLJvlVsdmKiwCzqlA" BOT_USERNAME = "@bighoosh_bot" # تنظیمات لاگ logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO) logger = logging.getLogger(__name__) # تنظیمات زمان تهران TEHRAN_TZ = pytz.timezone('Asia/Tehran') # ذخیره کاربرانی که پیام فرستاده‌اند daily_users = set() def collect_users(update, context): """جمع‌آوری نام کاربرانی که پیام می‌فرستند""" if update.message and update.message.from_user: user = update.message.from_user user_name = user.first_name or user.username or str(user.id) daily_users.add(user_name) def send_daily_report(context): """ارسال گزارش روزانه در ساعت 22 به وقت تهران""" now = datetime.now(TEHRAN_TZ) if daily_users: users_list = "\n".join(f"- {user}" for user in daily_users) message = f"کاربرانی که امروز ({now.strftime('%Y-%m-%d')}) در گروه پیام فرستادند:\n{users_list}" else: message = f"امروز ({now.strftime('%Y-%m-%d')}) هیچ کاربری در گروه پیام نفرستاد." # ارسال پیام به گروه for chat_id in context.bot_data.get('chat_ids', set()): context.bot.send_message(chat_id=chat_id, text=message) # پاک کردن لیست کاربران برای روز بعد daily_users.clear() def save_chat_id(update, context): """ذخیره آیدی گروه برای ارسال پیام""" chat_id = update.message.chat_id if 'chat_ids' not in context.bot_data: context.bot_data['chat_ids'] = set() context.bot_data['chat_ids'].add(chat_id) def main(): """اجرای ربات""" updater = Updater(TOKEN, use_context=True) dp = updater.dispatcher # جمع‌آوری پیام‌ها dp.add_handler(MessageHandler(Filters.text & ~Filters.command, collect_users)) dp.add_handler(MessageHandler(Filters.all, save_chat_id)) # زمان‌بندی ارسال گزارش روزانه scheduler = BackgroundScheduler(timezone=TEHRAN_TZ) scheduler.add_job(send_daily_report, 'cron', hour=22, minute=0) scheduler.start() # شروع ربات updater.start_polling() updater.idle() if __name__ == '__main__': main()